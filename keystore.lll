
;; KeyStore
;;
;;   A key-value store contract for Ethereum
;;
;; API
;;
;;   LLL
;;
;;   # Get a value
;;   [0] "get"
;;   [32] <key>
;;   (msg (gas) KEYSTORE 0 0 64)
;;
;;   # Set a value
;;   [0] "set"
;;   [32] <key>
;;   [64] <value>
;;   (msg (gas) KEYSTORE 0 0 96)
;;
;;   # Kill the contract (creator only)
;;   (msg KEYSTORE "kill")
;;
;;   ALETH
;;
;;   data: "get" <key>          # Get value
;;   data: "set" <key> <value>  # Set value
;;   data: "kill"               # Kill contract
;;
{
  ;; Init
  (def 'regname (name) {
    [0] "register"
    [32] name
    (call (- (gas) 100) NAMEREG 0 0 64 0 0)
  })
  (def 'NAMEREG 0xf7cc345a7885a8fb54f16bcbd726e08a7c300bd4)
  (def 'NAME 'KeyStore) (regname NAME)
  (def 'CREATOR 69) [[ CREATOR ]] (caller)

  ;; Code
  (returnlll {
    (def 'command $0)
    (def 'key $32)
    (def 'value $64)
    (when (= command 'get) (return @@key))
    (when (= command 'set) [[ key ]] value )
    (when (&& (= command 'kill)
              (= (caller) @@CREATOR))
          (suicide @@CREATOR))
  })
}
